version: "3.8"

volumes:
  sqlserver_data:

services:
  sqlServer:
      image: mcr.microsoft.com/mssql/server:2019-latest
      volumes:
        - sqlserver_data:/var/opt/mssql
      environment:
        ACCEPT_EULA: Y
        MSSQL_SA_PASSWORD: '!DataBasePassword'
      ports:
        - '1433:1433'
      expose:
        - '1433'
      healthcheck:
        test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P !DataBasePassword -Q 'SELECT 1' || exit 1"]
        interval: 10s
        retries: 10
        start_period: 10s
        timeout: 3s
  sqlServer.configurator:
    image: mcr.microsoft.com/mssql/server:2019-latest
    volumes:
      - ./ScriptCompose/SQLServer:/docker-entrypoint-initdb.d
    depends_on:
      sqlServer:
        condition: service_healthy
    command: >
      bash -c '
      /opt/mssql-tools/bin/sqlcmd -S sqlServer -U sa -P !DataBasePassword -d master -i docker-entrypoint-initdb.d/script.sql;
      echo "All done!";
      '
  postgres:
    image: postgres
    volumes:
      - ./ScriptCompose/PostgreSQL/script.sql:/docker-entrypoint-initdb.d/script.sql
      #- ./Tables/Create/1-Origins.sql:/docker-entrypoint-initdb.d/1-Origins.sql
      #- ./Tables/Create/1.1-OriginDimensions.sql:/docker-entrypoint-initdb.d/1.1-OriginDimensions.sql
      #- ./Tables/Create/1.2-OriginSqlConnection.sql:/docker-entrypoint-initdb.d/1.2-OriginSqlConnection.sql
      #- ./Tables/Create/1.3-OriginTimeDimensions.sql:/docker-entrypoint-initdb.d/1.3-OriginTimeDimensions.sql
    environment:
      POSTGRES_PASSWORD: DataBasePassword
      POSTGRES_USER: DataBaseUser
      POSTGRES_DB: postgres
    ports:
      - '5432:5432'
    expose:
      - '5432'
    networks:
      - postgres-network

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: "dbadmin@gmail.com.br"
      PGADMIN_DEFAULT_PASSWORD: "DBAdmin!"
    ports:
      - "16543:80"
    depends_on:
      - postgres
    networks:
      - postgres-network

networks: 
  postgres-network:
    driver: bridge